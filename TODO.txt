______________________________________________
# TODO
______________________________________________
- External control and reading status through named pipe (fifo, socket) -> class() ***
- https://docs.python.org/2/library/socket.html ***
- AI module (maybe reinforcement learning or something else)
______________________________________________
# TOTHINK
______________________________________________
- Think about new rocket engine design (angle + power | 2 bodies, force to second + rotation | joint)
- More realistic design (look real sizes etc.)
- Think about waiting 3-5 sec before green light ***
- Add dist to wings (to fix the bug when all velocity stops by wing, and landing is ok) (min(dist1, dist2)) ***
- Add in main class field self.win and report it ***
- http://stackoverflow.com/questions/13524039/friction-between-moving-static-body-and-dynamic-body -> no friction bug ***
- #
- http://stackoverflow.com/questions/6613022/box2d-colission-between-static-dynamic-bodies-causing-an-assert -> error collision
- http://www.iforce2d.net/b2dtut/collision-anatomy
- http://www.iforce2d.net/b2dtut/collision-callbacks
- http://pybox2d.googlecode.com/svn/doc/doxygen/html_output/functions_0x69.html
- Use real fixture contacts, not AABB as we used | hack =( ***
- #
- Add penalty to durability depending on the fuel balance
- Sprites, graphics
- Left engn <-> Right engn
______________________________________________
*** done | done and need to test
______________________________________________
# LOG
-------------
contacts 0
-------------
contacts 2
-------------
contacts 2
70.808883667 16.9
-------------
contacts 2
1 wings 2 platform True
1.04428935051 16.9
-------------
______________________________________________
